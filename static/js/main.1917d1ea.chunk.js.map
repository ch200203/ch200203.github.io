{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","aniSwitchChange","clickTab","Info","stock","Alert","className","connect","state","reducer","useState","alert","alertChange","timer","setTimeout","clearTimeout","clickTabChange","aniSwitch","inputData","inputDataChange","useContext","stockContext","useParams","history","useHistory","findProduct","shoes","find","product","x","onChange","event","target","value","src","width","onClick","stockChange","dispatch","type","payload","name","quan","data","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","alertOpen","reducer2","Table","responsive","map","a","i","React","createContext","App","Data","shoesChange","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","as","to","NavDropdown","Divider","Form","inline","FormControl","placeholder","Button","exact","path","Jumbotron","Provider","List","axios","get","then","result","console","log","JSON","stringify","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","basicState","store","createStore","combineReducers","action","몇번째있니","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1917d1ea.chunk.js","sourcesContent":["export default\r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] \r\n\r\n  /*  \r\n    export, import => 파일을 쪼갤때 사용\r\n    export default 변수명 : 내보내기\r\n    import 변수명 from '경로'; : 가져오기\r\n    { 변수명 } => 출력\r\n\r\n    보통 export default 는 가장 마지막에 사용, 파일 하나당 한번만 사용\r\n    내보낼 변수가 많은경우 export { 변수명1, 변수명2 }\r\n  */","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { stockContext } from './App.js';\r\nimport './Detail.scss';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet 박스 = styled.div `\r\n    padding : 20px\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.색상};\r\n`;\r\n\r\n\r\n\r\n// Lifecycle Hook 클래스로 만들 컴포넌트에서 사용\r\n// class Detail2 extends React.Component{\r\n//     componentDidMount(){\r\n//         // 랜더링이 될때 사용\r\n//     }\r\n\r\n//     componentWillUnmount(){\r\n//         // 컴포넌트가 사라질때 사용\r\n//     }\r\n// }\r\n\r\n\r\nfunction Detail(props) {\r\n    let [alert, alertChange] = useState(true);\r\n    // alert on/off\r\n    useEffect(()=> {\r\n        // 컴포넌트 가 mount, update 될때 특정 코드 실행\r\n        // 2초 뒤 alert 창을 제거\r\n        let timer  = setTimeout(()=> { /* 실행할 코드*/ alertChange(false);}, 2000);   \r\n        // return function 함수명 () { }  // 사라질때 실행 \r\n        return ()=>{ clearTimeout(timer); }\r\n    }, [/* useEffect 실행조건 입력 */]); // Hook    []가 빈칸이면 페이지 실행될때 한번만 실행되고 더이상 실행이 되지 않음\r\n\r\n    let [clickTab, clickTabChange] = useState(0);\r\n    let [aniSwitch, aniSwitchChange] = useState(true);\r\n\r\n    let [inputData, inputDataChange] = useState('');\r\n\r\n    let 재고 = useContext(stockContext);\r\n\r\n    let { id } = useParams();      // url 의 파라미터, 파라미터가 여러개일 경우 , 로 구분 {id, id2, id3...}\r\n    let history = useHistory(); // 방문기록을 저장하는 Object\r\n    let findProduct = props.shoes.find(function(product){\r\n        return product.id == id;\r\n        \r\n        // find => ES6 신문법, Array 안에서 원하는 자료를 찾고싶을 때 사용\r\n        // 1. find()는 array 뒤에 붙일 수 있으며, 안에 콜백함수가 들어갑니다.\r\n        // 2. 콜백함수 내의 파라미터는 (제가 상품이라고 적은거) array 안에 있던 하나하나의 데이터를 의미합니다.\r\n        // 3. return 오른쪽엔 조건식을 적을 수 있습니다. 이게 참인 데이터만 새로운 변수에 저장해줍니다.\r\n        // 4. 조건식엔 그리고 그걸 현재 URL의 /:id에 적힌 값과 상품의 영구번호 (상품.id)가 같은지 비교하고 있는 겁니다.\r\n    });\r\n\r\n    let 찾은상품 = props.shoes.find(x => x.id === id); // 이런식으로도 사용가능\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <박스>\r\n                <제목 색상={'black'}>Detail Page</제목>\r\n            </박스>\r\n            \r\n\r\n            { inputData }\r\n            <input onChange={(event) => {inputDataChange(event.target.value)}}/>\r\n\r\n            {\r\n                alert === true ? <Alert/> : null\r\n            }\r\n\r\n            \r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img src={\"https://codingapple1.github.io/shop/shoes\" + ((id*1) + 1) + \".jpg\"} width=\"100%\" />\r\n              </div>\r\n              <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{findProduct.title}</h4>\r\n                <p>{findProduct.content}</p>\r\n                <p>{findProduct.price}</p>\r\n\r\n                <Info stock={props.stock}></Info>\r\n\r\n                <button className=\"btn btn-danger\" onClick={()=> {                   \r\n                    props.stockChange([9, 10, 11]);\r\n                    props.dispatch({\r\n                        type : '항목추가', \r\n                        payload : {id : 2, name : '새로운상품', quan : 1},\r\n                        data : {id : findProduct.id, name : findProduct.title, quan : 1}\r\n                    });\r\n                    history.push('/cart');\r\n                } }>주문하기 </button> \r\n                &nbsp;\r\n                <button className=\"btn btn-danger\" onClick={()=> {\r\n                    history.goBack();\r\n                    // history.push('/');\r\n                }}>뒤로가기</button> \r\n              </div>\r\n            </div>\r\n\r\n            <Nav variant=\"tabs\" defaultActiveKey=\"/home\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={()=> {aniSwitchChange(false); clickTabChange(0)}}>상품정보</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={()=> {aniSwitchChange(true); clickTabChange(1)}}>배송정보</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={aniSwitch /* 애니메이션 동작 스위치 true 인 경우 동작(변수나 state로 저장)*/} classNames=\"wow\" timeout={500}>\r\n                <TabContent clickTab = {clickTab} aniSwitchChange={aniSwitchChange}/>\r\n            </CSSTransition>\r\n        \r\n        </div> \r\n    )\r\n}\r\n\r\nfunction TabContent (props) {\r\n    \r\n    useEffect(()=> {\r\n        props.aniSwitchChange(true);\r\n    });\r\n\r\n\r\n    if(props.clickTab === 0){\r\n        return <div>0번째 내용입니다.</div>\r\n    } else if(props.clickTab === 1){\r\n        return <div>1번째 내용입니다.</div>\r\n    } else if( props.clickTab === 2){\r\n        return <div>2번째 내용입니다.</div>\r\n    }\r\n}\r\n\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p> 재고 : {props.stock[0]} </p>\r\n    )\r\n}\r\n\r\nfunction Alert(){\r\n    return (\r\n        <>\r\n          <div className=\"my-alert-red\">\r\n            <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction stateToProps (state){\r\n    return {\r\n        state : state.reducer\r\n    }\r\n\r\n}\r\n\r\n// export default Detail; // Detail 이라는 함수를 export\r\nexport default connect(stateToProps)(Detail)","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n// import Table from '*' => export default 가 된거 가져오기\r\n\r\nfunction Cart (props) {\r\n    return (\r\n        <div>\r\n      <Table responsive>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>상품명</th>\r\n          <th>수량</th>\r\n          <th>변경</th>\r\n        </tr>\r\n        { props.state.map((a,i)=>{\r\n          return (\r\n          <tr key={i}>\r\n            <td>{a.id}</td>\r\n            <td>{a.name}</td>\r\n            <td>{a.quan}</td>\r\n            <td>\r\n                <button onClick={()=>{ props.dispatch({ type : '수량증가', id : a.id} ) }}> + </button>\r\n                    &nbsp;\r\n                <button onClick={()=>{ props.dispatch({ type : '수량감소', id : a.id} ) }}> - </button>\r\n            </td>\r\n          </tr>\r\n          )\r\n        })  }\r\n      </Table>\r\n\r\n      {\r\n        props.alertOpen === true ? \r\n          ( <div className=\"my-alert-red\">    \r\n              <p>지금 구매하시면 20% 할인입니다</p>\r\n              <button className=\"btn btn-danger\" onClick={()=> {\r\n                props.dispatch({type : 'close'});\r\n              }}>닫기</button>\r\n            </div> ) :\r\n          null\r\n      }\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction stateToProps(state) { // redux store로 가서 props 로 변환\r\n    return {\r\n        state : state.reducer ,\r\n        alertOpen : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(stateToProps)(Cart) // redux 에서 만든 state 사용하기\r\n\r\n// export default Cart;","/* eslint-disable-next-line */\nimport React, { useContext, useState } from 'react';\nimport { Navbar,Nav,NavDropdown,Form,Button,FormControl,Jumbotron, Modal } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail';\nimport axios from 'axios';\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nimport Cart from './Cart.js';\n\nexport let stockContext = React.createContext();\n\nfunction App() {\n\n  let [shoes, shoesChange] = useState(Data);\n  let [stock, stockChange] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Shoes - Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to =\"/\">Home</Nav.Link>\n            <Nav.Link ><Link to=\"/detail\"> Detail</Link></Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1> 20 % Season OFF </h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            \n            <stockContext.Provider value={stock}> {/* 범위.Provider value ={하위 컴포넌트에 공유하려는 값}*/}\n\n            <div className=\"row\">\n              {\n                shoes.map((a, i) => {\n                  return <List shoes = {shoes[i]} i = {i} key={i}/>\n                })\n\n\n              }\n            </div>\n            \n            </stockContext.Provider>\n\n\n          <btutton className=\"btn btn-primary\" onClick={() => {\n            // axios.post('https://codingapple1.github.io/shop/data2.json', {id : 'test', pw : 1234})\n            // .then((result) =>{})\n            // .catch(()=>{}); Post 요청하는 방식\n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result) => {\n              console.log(\"axios 통신 성공\");\n              console.log(JSON.stringify(result.data));\n\n              shoesChange([...shoes, ...result.data]);\n\n              \n\n            }) // ajax 실행 성공\n            .catch(()=>{\n              console.log('axios 통신 실패');\n              alert('axios 통신이 실패하였습니다.');\n            }); // ajax 실행 실패\n          }}>더보기</btutton>\n        </div>  \n        </Route>\n\n        \n        <Route path=\"/detail/:id\">\n          <stockContext value={stock}>\n            <Detail shoes={shoes} stock={stock} stockChange={stockChange}/>\n          </stockContext>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n\n\n        \n        {/* <Route path=\"/어쩌구\" component={Modal}></Route> */}\n\n      </Switch>\n    </div>\n  );\n\n  function List(props) {\n\n    let stock = useContext(stockContext); // ContextAPI 는 props 가 없어도 됨\n    let history = useHistory();\n\n      return (\n        \n          <div className=\"col-md-4\" onClick= { ()=> {history.push('detail/' + props.shoes.id)}}>\n            {/* {<Link to={'/detail/' + props.i}>} */}\n            <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\"/>\n            <h4>{ props.shoes.title }</h4>\n            <p>{ props.shoes.content } & {props.shoes.price }</p>\n            {stock[props.i]/* 간단한 데이터 전송은 props 사용*/} \n            {/* <Test></Test> */}\n            {/* </Link> */}\n          </div>\n      );\n  }\n\n\n  function Test(){\n    let 재고  = useContext(stockContext);\n    return <p>{재고[0]}</p>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n// BrowserRouter : 서버 라우팅 방지 API 를 작성해줘야함\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet basicState = [\n  { id : 0, name : '멋진신발', quan : 2 },\n  { id : 1, name : '멋진신발2', quan : 1}\n];\n// let store = createStore(()=> { return [{ id : 0, name : '멋진신발', quan : 2 }] }); // 초기값을 state 로 저장\n\nfunction reducer (state = basicState, action) {\n  \n  if( action.type === '항목추가') {\n    let 몇번째있니 = state.findIndex( (a) => { return a.id === action.data.id});\n\n    if( 몇번째있니 >= 0) {\n      let copy = [...state];\n      copy[몇번째있니].quan++;\n      return copy;\n    } else {\n      let copy = [...state];  \n      copy.push(action.data);\n      return copy;\n    }\n\n  } else if(action.type === '수량증가'){\n    let copy = [...state];\n    copy[action.id].quan++;\n    return copy;\n\n  } else if(action.type === '수량감소') {\n\n    let copy = [...state];\n    copy[action.id].quan--;\n    if(copy[action.id].quan < 0) copy[action.id].quan = 0;\n    return copy;\n    \n  } else {\n\n    return state;\n  }\n}\n\nlet alertValue = true;\n\nfunction reducer2 (state = alertValue, action){\n  \n  if(action.type === 'close'){\n    return false; \n  } else {\n    return state\n  }\n\n}\n\nlet store = createStore( combineReducers ({reducer, reducer2}));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}> {/* provider로 감싸진 안쪽은 props 전달 자유로움 */}\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}